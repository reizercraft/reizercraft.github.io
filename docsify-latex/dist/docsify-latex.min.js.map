{"version":3,"file":"docsify-latex.min.js","sources":["../src/js/tools.js","../src/js/settings.js","../src/js/constant.js","../src/js/render-function.js","../src/js/render.js","../src/js/index.js"],"sourcesContent":["export function escapeHtml(unsafe) {\n  return unsafe.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\nexport function unescapeHtml(htmlStr) {\n  htmlStr = htmlStr.replace(/&lt;/g , '<');\n  htmlStr = htmlStr.replace(/&gt;/g , '>');\n  htmlStr = htmlStr.replace(/&quot;/g , '\"');\n  htmlStr = htmlStr.replace(/&#39;/g , '\\'');\n  htmlStr = htmlStr.replace(/&amp;/g , '&');\n  return htmlStr;\n}\n\nexport function escapeRegex(regexStr) {\n  return regexStr.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n// Deep cover an object, for every keys in sourceObj, replce the value of targetObj\n// if its key exists, or put key&value into targetObj if not exists.\nexport function coverObject(sourceObj, targetObj) {\n  Object.keys(sourceObj).forEach(key => {\n    if (!Object.prototype.hasOwnProperty.call(targetObj, key)) {\n      targetObj[key] = sourceObj[key];\n      return;\n    }\n    if (Object.prototype.toString.call(sourceObj[key]) !== '[object Object]') {\n      targetObj[key] = sourceObj[key];\n      return;\n    }\n    coverObject(sourceObj[key], targetObj[key]);\n  });\n}\n","import { version as pkgVersion } from '../../package.json';\nimport { coverObject } from './tools';\n\n// Settings\n// =============================================================================\nconst settings = {\n  inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n  displayMath: [['$$', '$$']],\n  overflowScroll: true,\n  beforeInitFunc: () => {},\n  customOptions: {},\n};\n\nif (window) {\n  window.$docsify = window.$docsify || {};\n\n  // Add config object\n  window.$docsify.latex = window.$docsify.latex || {};\n\n  // Update settings based on $docsify config\n  coverObject(window.$docsify.latex, settings);\n  // Add plugin data\n  window.$docsify.latex.version = pkgVersion;\n}\n\nexport default settings;\n","export const latexTagName = 'docsify-latex';\nexport const latexBackTagName = 'docsify-latex-back';\n\nexport const latexTagDisplayAttrName = 'display';\n","// Render related functions\n// =============================================================================\nimport { latexTagName, latexBackTagName } from './constant';\n\n// TODO: custom\nconst jumpToTitle = 'Jump to equation';\nconst gobackTitle = 'Back To Reference';\nconst linkColor = '#0B87DA';\n\n// Implementation\n// =============================================================================\nexport function addReferenceJump(element) {\n  const elements = element.querySelectorAll(`${latexTagName} a[href]`);\n  if (elements === null || elements.length === 0) {\n    return;\n  }\n  for (const linkElement of elements) {\n    if (!Object.prototype.hasOwnProperty.call(linkElement.style, 'color')\n       || !linkElement.style.color) {\n      linkElement.style.color = linkColor;\n    }\n    // Add jump\n    const hrefAttr = linkElement.getAttribute('href');\n    const refId = decodeURIComponent(hrefAttr).substring(1);\n    if (hrefAttr.startsWith('#')) {\n      linkElement.title = jumpToTitle;\n      linkElement.onclick = () => {\n        const referedEle = document.getElementById(refId);\n        if (null === referedEle) {\n          return true;\n        }\n\n        let referedLatexEle = referedEle.parentElement;\n        while (referedLatexEle !== null) {\n          if (referedLatexEle.tagName === latexTagName.toUpperCase()) {\n            break;\n          }\n          referedLatexEle = referedLatexEle.parentElement;\n        }\n        // Add back to reference element\n        let backToEle = referedLatexEle.querySelector(latexBackTagName);\n        if (null === backToEle) {\n          backToEle = document.createElement(latexBackTagName);\n          referedLatexEle.append(backToEle);\n          backToEle.innerHTML = `<a href onclick=\"return false;\">${gobackTitle}</a>`;\n          backToEle.style.color = linkColor;\n          backToEle.style.float = 'right';\n        }\n        const currentPosition = document.documentElement.scrollTop;\n        backToEle.style.display = '';\n        backToEle.onclick = () => {\n          backToEle.style.display = 'none';\n          window.scrollTo(0, currentPosition);\n          return false;\n        };\n\n        window.scrollTo(0, referedLatexEle.offsetTop - linkElement.getBoundingClientRect().top);\n        return false;\n      };\n    }\n  }\n}\n","// Math display engine integration\n// =============================================================================\nimport settings from './settings';\nimport { latexTagName } from './constant';\nimport { coverObject, unescapeHtml } from './tools';\nimport { addReferenceJump } from './render-function';\n\n// Template\n// =============================================================================\nconst latexRender = Object;\nlatexRender.prepareContent = (content, latex) => { return content; };\nlatexRender.prepareRender = () => {};\nlatexRender.renderElement = (element, displayMode) => {};\nlatexRender.afterRender = () => {};\n\n// Implementation\n// =============================================================================\n\nsettings.beforeInitFunc();\n\n// - MathJax (V2, V3)\nif (typeof MathJax !== 'undefined' && MathJax) {\n  // MathJax configs and functions init\n  if (MathJax.version[0] === '3') {\n    coverObject(settings.customOptions, MathJax.config);\n    // Prevent inconsistency render symbol problem\n    MathJax.config.tex.inlineMath = settings.inlineMath;\n    MathJax.config.tex.displayMath = settings.displayMath;\n    MathJax.startup.getComponents();\n    latexRender.prepareRender = () => {\n      MathJax.startup.getComponents();\n      const OUTPUT = MathJax.startup.output;\n      if (typeof OUTPUT.clearCache !== 'undefined') {\n        OUTPUT.clearCache();\n      } else  if (typeof OUTPUT.clearFontCache !== 'undefined') {\n        OUTPUT.clearFontCache();\n      }\n    };\n    latexRender.renderElement = async (element, displayMode) => {\n      await MathJax.typesetPromise([element]);\n    };\n    latexRender.afterRender = () => {\n      addReferenceJump(document);\n      // Fix https://github.com/mathjax/MathJax/issues/2936\n      if (!settings.overflowScroll) {\n        return;\n      }\n      const latexElements = document.querySelectorAll(latexTagName);\n      for (const latexElement of latexElements) {\n        const mjxMathEle = latexElement.querySelector('mjx-math');\n        if (mjxMathEle === null) {\n          continue;\n        }\n        mjxMathEle.style.width = '';\n        const mjxMathWidth = mjxMathEle.getBoundingClientRect().width;\n\n        let mjxMllWidth = 0;\n        const mjxMllEle = latexElement.querySelector('mjx-assistive-mml');\n        if (mjxMathEle !== null) {\n          mjxMllWidth = mjxMllEle.getBoundingClientRect().width;\n        }\n        latexElement.style.width = Math.max(mjxMathWidth, mjxMllWidth) + 'px';\n      }\n    };\n  } else if (MathJax.version[0] === '2') {\n    const options = {\n      skipStartupTypeset: true,\n      messageStyle: 'none'\n    };\n    coverObject(settings.customOptions, options);\n    // Prevent inconsistency render symbol problem\n    coverObject({\n      tex2jax: {\n        inlineMath: settings.inlineMath,\n        displayMath: settings.displayMath\n      }\n    }, options);\n    MathJax.Hub.Config(options);\n    MathJax.Hub.processSectionDelay = 0;\n    MathJax.Hub.processUpdateDelay = 0;\n    latexRender.prepareRender = () => {\n      if (typeof MathJax.InputJax.TeX !== 'undefined') {\n        MathJax.Hub.Queue(\n          ['PreProcess', MathJax.Hub],\n          ['resetEquationNumbers', MathJax.InputJax.TeX],\n        );\n      }\n      MathJax.Hub.Queue(\n        ['PreProcess', MathJax.Hub],\n        ['Reprocess', MathJax.Hub]\n      );\n    };\n    latexRender.renderElement = (element, displayMode) => {\n      MathJax.Hub.Queue(\n        ['Typeset', MathJax.Hub, element],\n        [addReferenceJump, element]\n      );\n    };\n  }\n}\n// - KaTeX\nelse if (typeof katex !== 'undefined' && katex) {\n  const options = {\n    throwOnError: false,\n    trust: (context) => ['\\\\htmlId', '\\\\href'].includes(context.command),\n    macros: {\n      '\\\\eqref': '\\\\href{##ktx-#1}{(\\\\text{#1})}',\n      '\\\\ref': '\\\\href{##ktx-#1}{\\\\text{#1}}',\n      '\\\\label': '\\\\htmlId{ktx-#1}{}'\n    }\n  };\n  coverObject(settings.customOptions, options);\n\n  latexRender.prepareContent = (_content, latex) => { return latex; };\n  latexRender.renderElement = (element, displayMode) => {\n    options.displayMode = displayMode;\n    element.innerHTML = katex.renderToString(unescapeHtml(element.innerHTML), options);\n    addReferenceJump(element);\n  };\n}\n\nexport default latexRender;\n","// Dependencies\n// =============================================================================\nimport settings from './settings';\nimport latexRender from './render';\nimport { escapeHtml, escapeRegex } from './tools';\nimport { latexTagName, latexTagDisplayAttrName } from './constant';\n\n// Constants and variables\n// =============================================================================\nconst commentReplaceMark = 'latex:replace';\nconst deleteReplaceMark = 'latex:delete';\n\n// Regex rules Init\n// =============================================================================\nfunction getCommentReplaceMarkedText(text, placeholder='') {\n  return `<!-- ${commentReplaceMark} ${placeholder} ${text} -->`;\n}\n\n// Matches replacement comment\nfunction getCommentReplaceMarkupRegex(placeholder='') {\n  return new RegExp(`<!-- ${commentReplaceMark} ${placeholder} (.*?) -->`);\n}\n\nfunction getBlockRegex(matchStartRegex, matchEndRegex, needMatchMultipleLine, escape = true) {\n  // Escape string according to regex syntax\n  if (escape) {\n    matchStartRegex = escapeRegex(matchStartRegex);\n    matchEndRegex = escapeRegex(matchEndRegex);\n  }\n  // Matches markdown inline math\n  // Group 0: whole match result\n  // Group 1: content (with matchRegexs)\n  // Group 2: matchStartRegex match result\n  // Group 3: inner content (with matchRegexs)\n  return new RegExp(`(?:^|[^\\\\\\\\])((${matchStartRegex})((?:[^\\\\\\\\${needMatchMultipleLine ? '' : '\\n'}]|\\\\\\\\.)+?)${matchEndRegex})`);\n}\n\nfunction matchByRegexArray(content, regexGroup, displayMode = false) {\n  const mathRegex = getBlockRegex(regexGroup[0], regexGroup[1], displayMode);\n  return matchByRegex(content, mathRegex, displayMode);\n}\n\nfunction matchByRegex(content, regex, displayMode = false) {\n  const matchResult = content.match(regex);\n  if (matchResult) {\n    const result = {};\n    result.displayMode = displayMode;\n    result.content = matchResult[1];\n    result.innerContent = matchResult[3];\n    result.index = matchResult.index + matchResult[0].length - result.content.length;\n    result.endIndex = result.index + result.content.length;\n    // For debug only\n    result.regex = regex;\n    return result;\n  }\n  return null;\n}\n\nconst codePlaceholder = 'CODE';\n\nconst regex = {\n  // Matches html code blocks (inline and multi-line)\n  // Example: <code>CODE</code>\n  codeTagMarkup: getBlockRegex('<code>', '</code>', true),\n\n  // Matches markdown code blocks (inline and multi-line)\n  // Example: ```CODE```\n  codeBlockMarkup: getBlockRegex('`{3,}', '\\\\2', true, false),\n\n  // Matches markdown inline code\n  // Example: `CODE`\n  codeInlineMarkup: getBlockRegex('`{1,}', '\\\\2', false, false),\n\n  commentDeleteReplaceMarkup: /^(>?[ ]*)<!--/gm,\n\n  commentReplaceMarkup: getCommentReplaceMarkupRegex(),\n  commentCodeReplaceMarkup: getCommentReplaceMarkupRegex(codePlaceholder)\n};\n\n// Match functions\n// =============================================================================\n\nfunction matchMathBlocks(content) {\n  let inlineResult;\n  let displayResult;\n  const resultList = [];\n  for (const regexGroup of settings.inlineMath) {\n    inlineResult = matchByRegexArray(content, regexGroup, false);\n    if (inlineResult) {\n      break;\n    }\n  }\n  for (const regexGroup of settings.displayMath) {\n    displayResult = matchByRegexArray(content, regexGroup, true);\n    if (displayResult) {\n      break;\n    }\n  }\n  if (inlineResult) {\n    if (null === displayResult) {\n      resultList.push(inlineResult);\n    }\n    // If display shows before inline section, keep display only, no\n    // matter two blocks have any intersection.\n    else if (displayResult.index > inlineResult.index) {\n      resultList.push(inlineResult);\n      // Display and inline have intersection, keep inline only.\n      if (displayResult.index < inlineResult.endIndex) {\n        displayResult = null;\n      }\n      // No intersection, two independent matches.\n    }\n  }\n  if (displayResult) {\n    resultList.push(displayResult);\n  }\n  return resultList;\n}\n\n/**\n * Used to replace the content with matched result and wrapper it to comment\n * to prevent unpredictable behaviour\n *\n * @param {*} content original content\n * @param {*} contentMatch regex match result\n * @param {*} matchIndexForReplace which index of match result will be used to replace the original content\n * @param {*} placeholder place holder for replaced content\n * @param {*} matchList\n * @param {*} markerList\n * @returns\n */\nfunction matchReplacedConent(content, contentMatch, placeholder='') {\n  const contentLength = contentMatch.content.length;\n  const commentedConent = getCommentReplaceMarkedText(window.btoa(encodeURIComponent(contentMatch.content)), `${placeholder}`);\n  content = content.substring(0, contentMatch.index) + commentedConent\n    + content.substring(contentMatch.index + contentLength, content.length);\n  return content;\n}\n\nfunction getCodeRestoredContent(content) {\n  let contentMatch;\n  while ((contentMatch = regex.commentCodeReplaceMarkup.exec(content)) !== null) {\n    const commentMark = contentMatch[0];\n    const originalContent = contentMatch[1] || '';\n    content = content.replace(commentMark, () => (decodeURIComponent(window.atob(originalContent))));\n  }\n  return content;\n}\n\n/**\n * Converts LaTeX content into \"stage 1\" markup. Stage 1 markup contains temporary\n * comments which are replaced with HTML during Stage 2. This approach allows\n * all markdown to be converted to HTML before LaTeX-specific HTML is added.\n *\n * @param {string} content\n * @returns {string}\n */\nfunction renderStage1(content) {\n  let contentMatch;\n  // Protect content\n  // Replace code block with marker to ensure LaTeX markup within code\n  // blocks is not processed.\n  // These markers are replaced with their associated code blocs after\n  // blocks have been processed.\n  // WARN: Do not change the order of matches!\n  while ((contentMatch = matchByRegex(content, regex.codeTagMarkup)) !== null) {\n    content = matchReplacedConent(content, contentMatch, codePlaceholder);\n  }\n  while ((contentMatch = matchByRegex(content, regex.codeBlockMarkup)) !== null) {\n    content = matchReplacedConent(content, contentMatch, codePlaceholder);\n  }\n  while ((contentMatch = matchByRegex(content, regex.codeInlineMarkup)) !== null) {\n    content = matchReplacedConent(content, contentMatch, codePlaceholder);\n  }\n\n  // Render math blocks without code symbol `\n  let mathMatchs;\n  while ((mathMatchs = matchMathBlocks(content)).length !== 0) {\n    let lastIndex = -1;\n    let lastOffset = 0;\n    for (contentMatch of mathMatchs) {\n      const matchLength = contentMatch.content.length;\n      let preparedContent = latexRender.prepareContent(contentMatch.content, contentMatch.innerContent);\n      preparedContent = getCodeRestoredContent(preparedContent);\n      const latexElementAttrList = [];\n      latexElementAttrList.push(`${latexTagDisplayAttrName}=\"${contentMatch.displayMode}\"`);\n      if (settings.overflowScroll) {\n        const displayStyle = contentMatch.displayMode ? 'block' : 'inline-flex';\n        latexElementAttrList.push(`style=\"max-width: 100%;display: ${displayStyle};overflow: auto hidden;\"`);\n      }\n      const preparedHTML = `<${latexTagName} ${latexElementAttrList.join(' ')}>${escapeHtml(preparedContent)}</${latexTagName}>`;\n      const contentReplacement = getCommentReplaceMarkedText(window.btoa(encodeURIComponent(preparedHTML)));\n      let contentIndex = contentMatch.index;\n      if (contentMatch.index > lastIndex) {\n        contentIndex += lastOffset;\n      }\n      lastIndex = contentMatch.index;\n      lastOffset = contentReplacement.length - matchLength;\n      content = content.substring(0, contentIndex) + contentReplacement\n        + content.substring(contentIndex + matchLength, content.length);\n    }\n  }\n\n  // Unprotect content\n  content = getCodeRestoredContent(content);\n\n  // Put this in end of the processing pipeline, ensure docsify can render line breaks\n  // by itself, rather than ignore empty lines.\n  content = content.replaceAll(regex.commentDeleteReplaceMarkup, `$1${deleteReplaceMark}<!--`);\n\n  return content;\n}\n\n/**\n * Converts \"stage 1\" markup into final markup by replacing temporary comments\n * with HTML.\n *\n * @param {string} html\n * @returns {string}\n */\nfunction renderStage2(html) {\n  let contentMatch;\n  html = html.replaceAll(deleteReplaceMark, '');\n\n  // Restore all commented elements\n  while ((contentMatch = regex.commentReplaceMarkup.exec(html)) !== null) {\n    const commentMark = contentMatch[0];\n    const originalContent = contentMatch[1] || '';\n    html = html.replace(commentMark, () => (decodeURIComponent(window.atob(originalContent))));\n  }\n  return html;\n}\n\nasync function renderStage3() {\n  latexRender.prepareRender();\n  // Perform remain actions to latex elements\n  const mathElements =  document.getElementsByTagName(latexTagName);\n  for (const element of mathElements) {\n    const displayMode = element.getAttribute(latexTagDisplayAttrName) === 'true';\n    await latexRender.renderElement(element, displayMode);\n  }\n  latexRender.afterRender();\n}\n\n// Plugin\n// =============================================================================\nfunction initLatex(hook, vm) {\n  hook.beforeEach(function (content, next) {\n    content = renderStage1(content);\n    next(content);\n  });\n\n  hook.afterEach(function (html, next) {\n    html = renderStage2(html);\n    next(html);\n  });\n  hook.doneEach(async function() {\n    await renderStage3();\n  });\n\n}\n\nif (window) {\n  // Init plugin\n  window.$docsify.plugins = [].concat(\n    (window.$docsify.plugins || []),\n    initLatex\n  );\n}\n"],"names":["escapeRegex","regexStr","replace","coverObject","sourceObj","targetObj","Object","keys","forEach","key","prototype","hasOwnProperty","call","toString","settings","inlineMath","displayMath","overflowScroll","beforeInitFunc","customOptions","window","$docsify","latex","version","latexTagName","latexBackTagName","latexTagDisplayAttrName","linkColor","addReferenceJump","element","elements","querySelectorAll","concat","length","_step","_iterator","_createForOfIteratorHelper","_loop","linkElement","value","style","color","hrefAttr","getAttribute","refId","decodeURIComponent","substring","startsWith","title","onclick","referedEle","document","getElementById","referedLatexEle","parentElement","tagName","toUpperCase","backToEle","querySelector","createElement","append","innerHTML","float","currentPosition","documentElement","scrollTop","display","scrollTo","offsetTop","getBoundingClientRect","top","s","n","done","err","e","f","latexRender","prepareContent","content","prepareRender","renderElement","displayMode","afterRender","MathJax","config","tex","startup","getComponents","OUTPUT","output","clearCache","clearFontCache","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","typesetPromise","stop","_x","_x2","apply","this","arguments","latexElement","mjxMathEle","width","mjxMathWidth","mjxMllWidth","mjxMllEle","Math","max","options","skipStartupTypeset","messageStyle","tex2jax","Hub","Config","processSectionDelay","processUpdateDelay","InputJax","TeX","Queue","katex","throwOnError","trust","context","includes","command","macros","_content","renderToString","commentReplaceMark","deleteReplaceMark","getCommentReplaceMarkedText","text","placeholder","getCommentReplaceMarkupRegex","RegExp","getBlockRegex","matchStartRegex","matchEndRegex","needMatchMultipleLine","escape","matchByRegexArray","regexGroup","mathRegex","matchByRegex","regex","matchResult","match","result","innerContent","index","endIndex","codePlaceholder","codeTagMarkup","codeBlockMarkup","codeInlineMarkup","commentDeleteReplaceMarkup","commentReplaceMarkup","commentCodeReplaceMarkup","matchMathBlocks","inlineResult","displayResult","resultList","_step2","_iterator2","push","matchReplacedConent","contentMatch","contentLength","commentedConent","btoa","encodeURIComponent","getCodeRestoredContent","commentMark","originalContent","atob","exec","renderStage3","_renderStage","_callee2","mathElements","_iterator4","_step4","_context2","getElementsByTagName","t0","finish","plugins","hook","vm","beforeEach","mathMatchs","unsafe","_step3","lastIndex","lastOffset","_iterator3","matchLength","preparedContent","latexElementAttrList","displayStyle","preparedHTML","join","contentReplacement","contentIndex","replaceAll","renderStage1","afterEach","html","_loop2","renderStage2","doneEach"],"mappings":"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"}